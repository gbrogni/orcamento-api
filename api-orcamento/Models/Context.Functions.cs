// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using System;
using System.Data;
using System.Linq;
using api_orcamento.Models;

namespace api_orcamento.Models
{
    public partial class Context
    {

        [DbFunction("FirstDayOfMonth", "dbo")]
        public static DateTime? FirstDayOfMonth(DateTime? data)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("FormatDate", "dbo")]
        public static string FormatDate(DateTime? Datetime, string FormatMask)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("FormatNumber", "dbo")]
        public static string FormatNumber(double? Value, int? Round)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getAtingimento", "dbo")]
        public static double? getAtingimento(double? valorRealizado, double? valorMeta, bool? maiorMelhor)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getCidadeCliente", "dbo")]
        public static int? getCidadeCliente(int? codCliente)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getCodMesorregiaoCidade", "dbo")]
        public static int? getCodMesorregiaoCidade(int? codCidade)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getCodMicrorregiaoCidade", "dbo")]
        public static int? getCodMicrorregiaoCidade(int? codCidade)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getContaBloqueada", "dbo")]
        public static int? getContaBloqueada(int? codEmpresa, long? codContaContabil, string usuario)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getContaSalarioDataCCustoDescDespFixa", "dbo")]
        public static int? getContaSalarioDataCCustoDescDespFixa(int? codEmpresa, int? numOrcamento, DateTime? data, int? codCentroCusto, string codContaContabil)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getContaSalarioDataCCustoIntegracao", "dbo")]
        public static int? getContaSalarioDataCCustoIntegracao(int? codEmpresa, int? numOrcamento, DateTime? data, int? codCentroCusto, string codContaContabil)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getCotacaoMoeda", "dbo")]
        public static double? getCotacaoMoeda(int? codEmpresa, DateTime? data, int? moeda)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getCotacaoMoedaConsideraOrc", "dbo")]
        public static double? getCotacaoMoedaConsideraOrc(int? codEmpresa, DateTime? data, int? moeda, int? numOrcamento, DateTime? dataLimiteReal)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getCotacaoMoedaOrcamento", "dbo")]
        public static double? getCotacaoMoedaOrcamento(int? codOrcamento, int? codMoeda, DateTime? data)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getCountPermissaoDadoGerencial", "dbo")]
        public static int? getCountPermissaoDadoGerencial(int? codEmpresa, int? codModelo, int? codArea, int? codObjetivo, int? codAcao, int? codIniciativa, int? codNivel, int? codIndicador, string usuario, int? codGrupoUsuario)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getCountPermissaoEdicaoDadoGerencial", "dbo")]
        public static int? getCountPermissaoEdicaoDadoGerencial(int? codEmpresa, int? codModelo, int? codObjetivo, int? codAcao, int? codIniciativa, int? codArea, int? codNivel, int? codIndicador, string usuario, int? codGrupoUsuario)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getEhLoteZeramentoContabil", "dbo")]
        public static bool? getEhLoteZeramentoContabil(int? filial, DateTime? dataLancamento, int? nrLote)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetEngenhariaExplodida", "dbo")]
        public IQueryable<GetEngenhariaExplodidaResult> GetEngenhariaExplodida(string produto, DateTime? data, double? qtde)
        {
            return FromExpression(() => GetEngenhariaExplodida(produto, data, qtde));
        }

        [DbFunction("getFantasiaEmpresa", "dbo")]
        public static string getFantasiaEmpresa(int? codEmpresa)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetInsumoEngenharia", "dbo")]
        public IQueryable<GetInsumoEngenhariaResult> GetInsumoEngenharia(string produto, DateTime? data, double? qtde)
        {
            return FromExpression(() => GetInsumoEngenharia(produto, data, qtde));
        }

        [DbFunction("GetMateriaisEngenhariaProduto", "dbo")]
        public IQueryable<GetMateriaisEngenhariaProdutoResult> GetMateriaisEngenhariaProduto(string produto, DateTime? data, double? qtde)
        {
            return FromExpression(() => GetMateriaisEngenhariaProduto(produto, data, qtde));
        }

        [DbFunction("getMesorregiaoCidade", "dbo")]
        public static string getMesorregiaoCidade(int? codCidade)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getMicrorregiaoCidade", "dbo")]
        public static string getMicrorregiaoCidade(int? codCidade)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getNomeCentroCusto", "dbo")]
        public static string getNomeCentroCusto(int? codEmpresa, int? codCentroCusto)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getNomeContaContabil", "dbo")]
        public static string getNomeContaContabil(int? codEmpresa, string codContaContabil)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getNomeEmpresa", "dbo")]
        public static string getNomeEmpresa(int? codEmpresa)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getNomeOrcamento", "dbo")]
        public static string getNomeOrcamento(int? numOrcamento)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getNomeRepresentanteAtual", "dbo")]
        public static string getNomeRepresentanteAtual(int? codEmpresa, int? codRepresentante)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getNomeTipoCC", "dbo")]
        public static string getNomeTipoCC(int? CODTIPO)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getOrgNivelCentroCustoRegua", "dbo")]
        public static string getOrgNivelCentroCustoRegua(int? codEmpresa, int? codCentroCusto)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getOrgNomeNivelCentroCusto", "dbo")]
        public static string getOrgNomeNivelCentroCusto(int? codEmpresa, int? codCentroCusto)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getOrgResponsavelCentroCusto", "dbo")]
        public static string getOrgResponsavelCentroCusto(int? codEmpresa, int? codCentroCusto)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getPermissaoDadoGerencial", "dbo")]
        public static bool? getPermissaoDadoGerencial(int? codEmpresa, int? codModelo, int? codObjetivo, int? codAcao, int? codIniciativa, int? codArea, int? codNivel, int? codIndicador, string usuario)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getPermissaoEdicaoDadoGerencial", "dbo")]
        public static bool? getPermissaoEdicaoDadoGerencial(int? codEmpresa, int? codModelo, int? codObjetivo, int? codAcao, int? codIniciativa, int? codArea, int? codNivel, int? codIndicador, string usuario)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getRegiaoCidade", "dbo")]
        public static string getRegiaoCidade(int? codCidade)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getRepresentanteAtual", "dbo")]
        public static int? getRepresentanteAtual(int? codEmpresa, int? codCliente)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getSaldoInicialFinanciamento", "dbo")]
        public static double? getSaldoInicialFinanciamento(int? empresa_in, int? financiamento_in, DateTime? data_in, DateTime? data_inicio_in, DateTime? data_fim_in, string campos_in, int? saldo_in)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getSaldoInicialFinanciamentoOrcamento", "dbo")]
        public static double? getSaldoInicialFinanciamentoOrcamento(int? empresa_in, int? financiamento_in, int? numOrcamento_in, int? anoOrcamento_in, DateTime? data_in, DateTime? data_inicio_in, DateTime? data_fim_in, string campos_in, int? saldo_in)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getStatsBimestre", "dbo")]
        public static string getStatsBimestre(DateTime? data)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getStatsRegiaoEstado", "dbo")]
        public static string getStatsRegiaoEstado(string estado)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getStatsSemanaAno", "dbo")]
        public static int? getStatsSemanaAno(DateTime? data)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getStatsSemestre", "dbo")]
        public static string getStatsSemestre(DateTime? data)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getStatsTrimestre", "dbo")]
        public static string getStatsTrimestre(DateTime? data)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getStatusPrazo", "dbo")]
        public static string getStatusPrazo(DateTime? dataPrazo, DateTime? dataCheck)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getTempCentroCustoLiberado", "dbo")]
        public static int? getTempCentroCustoLiberado(string programa, int? codCentroCusto, string usuario)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getTempEmpresaCCustoLiberado", "dbo")]
        public static int? getTempEmpresaCCustoLiberado(string programa, int? codCentroCusto, string usuario, int? codEmpresa, int? checaLibEspecial)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getTipoCentroCusto", "dbo")]
        public static int? getTipoCentroCusto(int? codEmpresa, int? codCentroCusto)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getTipoConta", "dbo")]
        public static string getTipoConta(int? codEmpresa, string codContaContabil)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getTipoContaCCExcecao", "dbo")]
        public static string getTipoContaCCExcecao(int? codEmpresa, string codContaContabil, int? codCentroCuto)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getTipoContaMatricial", "dbo")]
        public static string getTipoContaMatricial(string tipoConta, bool? tipoContaSalario)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getTipoContaSalarioPorData", "dbo")]
        public static int? getTipoContaSalarioPorData(int? codEmpresa, int? numOrcamento, DateTime? data, string codContaContabil)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getTipoContaSalarioPorDataCCusto", "dbo")]
        public static int? getTipoContaSalarioPorDataCCusto(int? codEmpresa, int? numOrcamento, DateTime? data, int? codCentroCusto, string codContaContabil)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getTipoContaTemp", "dbo")]
        public static string getTipoContaTemp(int? codEmpresa, string codContaContabil)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getUltimoMaterialCustoProduto", "dbo")]
        public static double? getUltimoMaterialCustoProduto(int? codEmpresa, string codProduto, DateTime? dataRef)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getUsuarioRespPacoteConta", "dbo")]
        public static string getUsuarioRespPacoteConta(int? empresa, long? codContaContabil)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getValoresFinanciamento", "dbo")]
        public static double? getValoresFinanciamento(int? empresa_in, int? financiamento_in, DateTime? data_inicio_in, DateTime? data_fim_in, string campos_in, int? acumulado_in, int? saldo_in)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getValoresFinanciamentoOrcamento", "dbo")]
        public static double? getValoresFinanciamentoOrcamento(int? empresa_in, int? financiamento_in, int? numOrcamento_in, int? anoOrcamento_in, DateTime? data_inicio_in, DateTime? data_fim_in, string campos_in, int? acumulado_in, int? saldo_in, DateTime? dataLimiteCot_in)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("getValorLoteZeramento", "dbo")]
        public static double? getValorLoteZeramento(int? empresa, int? ano, int? mes, int? codContaContabil, int? codCentroCusto, string tipoMov)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        protected void OnModelCreatingGeneratedFunctions(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<GetEngenhariaExplodidaResult>().HasNoKey();
            modelBuilder.Entity<GetInsumoEngenhariaResult>().HasNoKey();
            modelBuilder.Entity<GetMateriaisEngenhariaProdutoResult>().HasNoKey();
        }
    }
}
